############################################
# A script to detect if an IIS server is exploited with CVE-2021-31166 vulnerability.
# (c) copyright 2021 - https://github.com/mvlnetdev
# For more information check out https://github.com/mvlnetdev/CVE-2021-31166-detection-rules
############################################

module CVE20213166;

global accept_encoding_values: set[string];
const signature_pattern: pattern = /[^[:space:]]+,[[:space:]]{0,},$/;
const iis_websubnets: set[subnet] = {192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8};
global iis_webservers: set[addr];
const server_headers: set[string] = {"Microsoft-IIS/10.0", "Microsoft-HTTPAPI/2.0", };
const learn_iis_webservers: bool = F;
global attacked_hosts: set[addr] &write_expire = 5 min;

export {
  redef enum Notice::Type += {
    CVE_2021_31166_EXP_DETECT,
    CVE_2021_31166_HOST_DOWN,
  };
}

event http_header(c: connection, is_orig: bool, original_name: string, name: string, value: string) {
    if (learn_iis_webservers && c$id$resp_h !in iis_webservers) {
        if (name == "SERVER" && value in server_headers) {
            add iis_webservers[c$id$resp_h];
        }
    }
    if(c$id$resp_h in iis_webservers || c$id$resp_h in iis_websubnets) {
        if(name == "ACCEPT-ENCODING"){
            if(signature_pattern in value) {
                add attacked_hosts[c$id$resp_h];
                local msg = fmt("Detected CVE-2021-31166 from %s to %s", c$id$orig_h, c$id$resp_h);
                NOTICE([$note=CVE_2021_31166_EXP_DETECT, $msg=msg, $conn=c, $sub="Detected CVE-2021-31166 exploitation"]);
            }
        }
    }
}

event tcp_multiple_retransmissions(c: connection, is_orig: bool, threshold: count) {
    if (c$id$resp_h in attacked_hosts){
        delete attacked_hosts[c$id$resp_h];
        local msg = fmt("Host %s down after CVE-2021-31166 exploitation", c$id$resp_h);
        NOTICE([$note=CVE_2021_31166_HOST_DOWN, $msg=msg, $conn=c, $sub="Host down after CVE-2021-31166 exploitation"]);
    }
}
